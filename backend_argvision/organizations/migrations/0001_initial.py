# Generated by Django 5.2.1 on 2025-05-21 01:31

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('zones', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('game_type', models.CharField(choices=[('SPORT', 'Sport'), ('ESPORT', 'Esport')], max_length=10)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='game_pics/')),
                ('base_points', models.IntegerField(default=1, help_text='Base points awarded for participating in the game', validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(default='Match', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('UPCOMING', 'Upcoming'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELED', 'Canceled')], default='upcoming', max_length=20)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_start', models.DateTimeField()),
                ('duration', models.DurationField()),
                ('picture', models.ImageField(blank=True, null=True, upload_to='match_pics/')),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('PRIVATE', 'Private'), ('COMPETITION', 'Competition'), ('OTHER', 'Other')], default='PUBLIC', max_length=12)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_created', to=settings.AUTH_USER_MODEL)),
                ('game', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='organizations.game')),
                ('terrain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='zones.terrain')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_won', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'matches',
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('message_type', models.CharField(choices=[('MESSAGE', 'Message'), ('REPLY', 'Reply'), ('REACT', 'React')], default='MESSAGE', max_length=10)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='organizations.match')),
                ('replying_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='organizations.message')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=100)),
                ('slogan', models.CharField(blank=True, max_length=200)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='team_pics/')),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('score', models.IntegerField(default=0)),
                ('rank', models.PositiveSmallIntegerField(choices=[(1, 'Iron'), (2, 'Bronze'), (3, 'Silver'), (4, 'Gold'), (5, 'Platinum'), (6, 'Diamond')], default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Beginner'), (2, 'Intermediate'), (3, 'Advanced'), (4, 'Expert'), (5, 'Master')], default=1)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_teams', to=settings.AUTH_USER_MODEL)),
                ('game', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='organizations.game')),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='TeamMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('date_invited', models.DateTimeField(auto_now_add=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('INVITED', 'Invited'), ('MEMBER', 'Member'), ('DENIED', 'Denied'), ('ADMIN', 'Admin'), ('KICKED', 'Kicked'), ('LEFT', 'Left')], default='INVITED', max_length=10)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'team')},
            },
        ),
        migrations.AddField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(through='organizations.TeamMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MatchMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('date_invited', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('INVITED', 'Invited'), ('MEMBER', 'Member'), ('DENIED', 'Denied'), ('ADMIN', 'Admin'), ('KICKED', 'Kicked'), ('LEFT', 'Left')], default='INVITED', max_length=10)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.match')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'match')},
            },
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveSmallIntegerField(choices=[(1, 'Iron'), (2, 'Bronze'), (3, 'Silver'), (4, 'Gold'), (5, 'Platinum'), (6, 'Diamond')], default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Beginner'), (2, 'Intermediate'), (3, 'Advanced'), (4, 'Expert'), (5, 'Master')], default=1)),
                ('score', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('type', models.CharField(choices=[('STANDARD', 'Standard'), ('TOURNAMENT', 'Tournament')], default='STANDARD', max_length=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('game', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='organizations.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rankings', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rankings', to='organizations.team')),
            ],
            options={
                'ordering': ['-score', '-level', 'rank'],
                'unique_together': {('user', 'game', 'team')},
            },
        ),
    ]
